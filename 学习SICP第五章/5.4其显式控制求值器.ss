;算法是什么?
;;算法 = 步骤 = 操作 = 指令,
;操作分为: 操作者 与 操作范围.
;寄存器 = 变量 = 指针.

;;寄存器与操作
;一个栈与七个寄存器: 表达式,环境,值,继续,过程,实参列,未求值

;;5.4.1其显式控制求值器的核心
求值调度
 (测试 (操作了 自求值?) (寄存 表达式))
 (分支 (标号 求自己求值))
 (测试 (操作了 变量?) (寄存 表达式))
 (分支 (标号 求变量))
 (测试 (操作了 已引号?) (寄存 表达式))
 (分支 (标号 求已引号))
 (测试 (操作了 赋值?) (寄存 表达式))
 (分支 (标号 求赋值))
 (测试 (操作了 定义?) (寄存 表达式))
 (分支 (标号 求定义))
 (测试 (操作了 若?) (寄存 表达式))
 (分支 (标号 求若))
 (测试 (操作了 入?) (寄存 表达式))
 (分支 (标号 求入))
 (测试 (操作了 开始?) (寄存 表达式))
 (分支 (标号 求开始))
 (测试 (操作了 应用程序?) (寄存 表达式))
 (分支 (标号 求应用程序))
 (走到 (标号 未知表达式类型))

;求值简单表达式
求自己求值
 (赋值 值 (寄存 表达式))
 (走到 (寄存 继续))
求变量
 (赋值 值 (操作了 查找变量值) (寄存 表达式) (寄存 环境))
 (走到 (寄存 继续))
求已引号
 (赋值 值 (操作了 问题文本) (寄存 表达式))
 (走到 (寄存 继续))
求入
 (赋值 未求值 (操作了 入形参) (寄存 表达式))
 (赋值 表达式 (操作了 入物自体) (寄存 表达式))
 (赋值 值 (操作了 制作过程) (寄存 未求值) (寄存 表达式) (寄存 环境))
 (走到 (寄存 继续))

;闲聊,影视剧,游戏,偶尔的纵欲,
;原来是通过这些东西摧毁. 不可思议.

;求值过程应用
求应用程序
 (保存 继续)
 (保存 环境)
 (赋值 未求值 (操作了 操作范围) (寄存 表达式))
 (保存 未求值)
 (赋值 表达式 (操作了 操作者) (寄存 表达式))
 (赋值 继续 (标号 求应用已做操作者))
 (走到 (标号 求值调度))

求应用已做操作者
 (恢复 未求值) ;其操作范围
 (恢复 环境)
 (赋值 实参列 (操作了 空实参列表))
 (赋值 过程 (寄存 值)) ;其操作者
 (测试 (操作了 无操作范围?) (寄存 未求值))
 (分支 (标号 应用调度))
 (保存 过程)

求应用操作范围环
 (保存 实参列)
 (赋值 表达式 (操作了 第一个操作范围) (寄存 未求值))
 (测试 (操作了 最后操作范围?) (寄存 未求值))
 (分支 (标号 求应用最后实参))
 (保存 环境)
 (保存 未求值)
 (赋值 继续 (标号 求应用累加实参))
 (走到 (标号 求值调度))

求应用累加实参
 (恢复 未求值)
 (恢复 环境)
 (恢复 实参列)
 (赋值 实参列 (操作了 邻近实参) (寄存 值) (寄存 实参列))
 (赋值 未求值 (操作了 测试操作范围) (寄存 未求值))
 (走到 (标号 求应用操作范围环))

求应用最后实参
 (赋值 继续 (标号 求应用累加最后实参))
 (走到 (标号 求值调度))
求应用累加最后实参
 (恢复 实参列)
 (赋值 实参列 (操作了 邻近实参) (寄存 值) (寄存 实参列))
 (恢复 过程)
 (走到 (标号 应用调度))

;过程应用
应用调度
 (测试 (操作了 原语过程?) (寄存 过程))
 (分支 (标号 原语应用))
 (测试 (操作了 复合过程?) (寄存 过程))
 (分支 (标号 复合应用))
 (走到 (标号 未知过程类型))

原语应用
 (赋值 值 (操作了 应用原语过程) (寄存 过程) (寄存 实参列))
 (恢复 继续)
 (走到 (寄存 继续))

复合应用
 (赋值 未求值 (操作了 过程形参) (寄存 过程))
 (赋值 环境 (操作了 过程环境) (寄存 过程))
 (赋值 环境 (操作了 扩展环境) (寄存 未求值) (寄存 实参列) (寄存 环境))
 (赋值 未求值 (操作了 过程物自体) (寄存 过程))
 (走到 (标号 求序列))

;5.4.2 序列求值与尾递归
求开始
 (赋值 未求值 (操作了 开始动作) (寄存 表达式))
 (保存 继续)
 (走到 (标号 求序列))

求序列
 (赋值 表达式 (操作了 第一个表达式) (寄存 未求值))
 (测试 (操作了 最后表达式?) (寄存 未求值))
 (分支 (标号 求序列最后表达式))
 (保存 未求值)
 (保存 环境)
 (赋值 继续 (标号 求序列继续))
 (走到 (标号 求值调度))
求序列继续
 (恢复 环境)
 (恢复 未求值)
 (赋值 未求值 (操作了 剩余表达式) (寄存 未求值))
 (走到 (标号 求序列))
求序列最后表达式
 (恢复 继续)
 (走到 (标号 求值调度))

;尾递归
(define (平方迭代 猜 未知)
    (if (够好? 猜 未知)
    猜
    (平方迭代 (改进 猜 未知) 未知)))

求序列
 (测试 (操作了 无更多表达式?) (寄存 未求值))
 (分支 (标号 求序列终))
 (赋值 表达式 (操作了 第一个表达式) (寄存 未求值))
 (保存 未求值)
 (保存 环境)
 (赋值 继续 (标号 求序列继续))
 (走到 (标号 求值调度))
求序列继续
 (恢复 环境)
 (恢复 未求值)
 (赋值 未求值 (操作了 剩余表达式) (寄存 未求值))
 (走到 (标号 求序列))
求序列终
 (恢复 继续)
 (走到 (寄存 继续))

(define (计数 数)
    (新行)
    (显示 数)
    (计数 (+ 数 1)))

;;5.4.3 条件,赋值,与定义
求若
 (保存 表达式) ;保存表达式为以后
 (保存 环境)
 (保存 继续)
 (赋值 继续 (标号 求若决定))
 (赋值 表达式 (操作了 若谓词) (寄存 表达式))
 (走到 (标号 求值调度)) ;求值其谓词

求若决定
 (恢复 继续)
 (恢复 环境)
 (恢复 表达式)
 (测试 (操作了 真?) (寄存 值))
 (分支 (标号 求若后果))

求若替代物
 (赋值 表达式 (操作了 若替代物) (寄存 表达式))
 (走到 (标号 求值调度))
求若后果
 (赋值 表达式 (操作了 若后果) (寄存 表达式))
 (走到 (标号 求值调度))

;赋值与定义
求赋值
 (赋值 未求值 (操作了 赋值变量) (寄存 表达式))
 (保存 未求值) ;保存变量为以后
 (赋值 表达式 (操作了 赋值值) (寄存 表达式))
 (保存 环境)
 (保存 继续)
 (赋值 继续 (标号 求赋值1))
 (走到 (标号 求值调度)) ;求值其赋值值
求赋值1
 (恢复 继续)
 (恢复 环境)
 (恢复 未求值)
 (表演 (操作了 集变量值!) (寄存 未求值) (寄存 值) (寄存 环境))
 (赋值 值 (常量 没问题))
 (走到 (寄存 继续))

求定义
 (赋值 未求值 (操作了 定义变量) (寄存 表达式))
 (保存 未求值) ;保存变量为以后
 (赋值 表达式 (操作了 定义值) (寄存 表达式))
 (保存 环境)
 (保存 继续)
 (赋值 继续 (标号 求定义1))
 (走到 (标号 求值调度)) ;求值其定义值
求定义1
 (恢复 继续)
 (恢复 环境)
 (恢复 未求值)
 (表演 (操作了 定义变量!) (寄存 未求值) (寄存 值) (寄存 环境))
 (赋值 值 (常量 没问题))
 (走到 (寄存 继续))

;;5.4.4 跑其求值器
读求值印-环
 (表演 (操作了 初始化栈))
 (表演 (操作了 提示为输入) (常量 ";;;显式控制求值 输入:"))
 (赋值 表达式 (操作了 读))
 (赋值 环境 (操作了 获取全局环境))
 (赋值 继续 (标号 打印结果))
 (走到 (标号 求值调度))
打印结果
 (表演 (操作了 宣布输出) (常量 ";;;显式控制求值 值:"))
 (表演 (操作了 用户打印) (寄存 值))
 (走到 (标号 读求值印-环))

未知表达式类型
 (赋值 值 (常量 未知表达式类型错误))
 (走到 (标号 信号错误))
未知过程类型
 (恢复 继续) ;清扫栈(来自应用调度)
 (赋值 值 (常量 未知过程类型错误))
 (走到 (标号 信号错误))
信号错误
 (表演 (操作了 用户打印) (寄存 值))
 (走到 (标号 读求值印-环))


;组合从5.4.1到5.4.4的全部代码,创建一个求值器机器模型,
;用5.2的寄存器机器模拟器跑.
(define 显式控制求值
    (制作机器 '(表达式 环境 值 过程 实参列 继续 未求值)
        显式控制求值操作
        '(读求值印-环 <如上所述的整个机器控制器>)))

(define 显式控制求值操作
    (list (list '自求值? 自求值)
        <完整操作列表为显式控制求值机器>))

(define 其全局环境 (设置环境))

(起始 显式控制求值)

;监视其求值器的性能
打印结果
 (表演 (操作了 打印栈统计))  ;增加的指令
 (表演 (操作了 宣布输出) (常量 ";;;显式控制求值 值:"))
 ......   ;与之前相同的代码

